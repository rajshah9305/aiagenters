import { Agent, AgentCategory } from '@/types/agent'

export const APP_CONFIG = {
  name: 'AgentForge Elite',
  version: '1.0.0',
  description: 'Revolutionary AI Agents Orchestration Platform',
  url: process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000',
}

export const API_CONFIG = {
  baseUrl: '/api',
  timeout: 30000,
  retries: 3,
}

export const FEATURE_FLAGS = {
  AGENTS: true,
  COLLABORATION: true,
  ANALYTICS: true,
  TERMINAL: true,
}

export const AGENT_CATEGORIES = {
  coding: {
    label: 'Coding',
    icon: 'üíª',
    count: 12,
    description: 'Code generation, debugging, and development assistance',
  },
  research: {
    label: 'Research',
    icon: 'üî¨',
    count: 8,
    description: 'Data analysis, information gathering, and research assistance',
  },
  automation: {
    label: 'Automation',
    icon: '‚ö°',
    count: 15,
    description: 'Task automation and workflow optimization',
  },
  creative: {
    label: 'Creative',
    icon: 'üé®',
    count: 6,
    description: 'Content creation and creative assistance',
  },
  enterprise: {
    label: 'Enterprise',
    icon: 'üè¢',
    count: 9,
    description: 'Business solutions and enterprise tools',
  },
} as const

export const MOCK_AGENTS: Agent[] = [
  {
    id: 'autogpt',
    name: 'AutoGPT',
    category: 'automation',
    description: 'Revolutionary autonomous AI agent that can think, plan, and execute complex tasks independently with minimal human intervention.',
    features: ['Autonomous Planning', 'Web Browsing', 'File Operations', 'Memory Management', 'Goal Achievement'],
    capabilities: 'AutoGPT represents a breakthrough in autonomous AI. It can break down complex objectives into manageable sub-tasks, execute them independently, and adapt its approach based on results.',
    useCases: ['Market Research', 'Content Creation', 'Data Analysis', 'Task Automation', 'Project Management'],
    version: '0.5.1',
    techStack: ['GPT-4', 'LangChain', 'Vector DB', 'Web Scraping', 'E2B Sandbox'],
    repositoryUrl: 'https://github.com/Significant-Gravitas/AutoGPT',
    documentationUrl: 'https://docs.agpt.co/',
    isActive: true,
    isOpenSource: true,
    pricing: {
      model: 'free',
      cost: 'Free with API costs',
      features: ['Open Source', 'Self-hosted', 'Community Support'],
    },
    performance: {
      successRate: '94%',
      averageSpeed: '1.2s',
      uptime: '99.8%',
      costPerTask: '$0.12',
    },
    metadata: {
      totalDeployments: '2,847',
      rating: 4.8,
      lastUpdated: '2024-01-15',
      createdAt: '2023-03-30',
      updatedAt: '2024-01-15',
    },
    icon: 'üß†',
    tags: ['autonomous', 'planning', 'web-access', 'popular'],
  },
  {
    id: 'babyagi',
    name: 'BabyAGI',
    category: 'research',
    description: 'AI-powered task management system with persistent memory and adaptive learning capabilities.',
    features: ['Task Creation', 'Prioritization', 'Vector Memory', 'Adaptive Learning', 'Result Processing'],
    capabilities: 'BabyAGI uses advanced task management with vector databases for long-term memory, enabling it to learn from previous executions and improve over time.',
    useCases: ['Research Projects', 'Knowledge Management', 'Strategic Planning', 'Learning Systems', 'Documentation'],
    version: '2.3.0',
    techStack: ['GPT-4', 'Pinecone', 'OpenAI Embeddings', 'LangChain', 'Python'],
    repositoryUrl: 'https://github.com/yoheinakajima/babyagi',
    documentationUrl: 'https://github.com/yoheinakajima/babyagi/blob/main/README.md',
    isActive: true,
    isOpenSource: true,
    pricing: {
      model: 'free',
      cost: 'Free with API costs',
      features: ['Open Source', 'Vector Memory', 'Community Support'],
    },
    performance: {
      successRate: '97%',
      averageSpeed: '0.8s',
      uptime: '99.9%',
      costPerTask: '$0.08',
    },
    metadata: {
      totalDeployments: '1,956',
      rating: 4.9,
      lastUpdated: '2024-01-10',
      createdAt: '2023-04-05',
      updatedAt: '2024-01-10',
    },
    icon: 'üë∂',
    tags: ['research', 'memory', 'learning', 'tasks'],
  },
  {
    id: 'gpt-engineer',
    name: 'GPT Engineer',
    category: 'coding',
    description: 'Generates entire codebases from natural language descriptions with proper architecture and best practices.',
    features: ['Full-Stack Generation', 'Architecture Design', 'Code Documentation', 'Best Practices', 'Framework Integration'],
    capabilities: 'GPT Engineer can create complete applications from simple prompts, including proper project structure, documentation, and tests. Supports multiple programming languages and frameworks.',
    useCases: ['Rapid Prototyping', 'MVP Development', 'Code Generation', 'API Creation', 'Frontend Development'],
    version: '0.3.2',
    techStack: ['GPT-4', 'GitHub API', 'Docker', 'Multiple Frameworks', 'CI/CD'],
    repositoryUrl: 'https://github.com/AntonOsika/gpt-engineer',
    documentationUrl: 'https://gpt-engineer.readthedocs.io/',
    isActive: true,
    isOpenSource: true,
    pricing: {
      model: 'free',
      cost: 'Free with API costs',
      features: ['Open Source', 'Multiple Languages', 'Community Support'],
    },
    performance: {
      successRate: '92%',
      averageSpeed: '15.3s',
      uptime: '99.7%',
      costPerTask: '$0.45',
    },
    metadata: {
      totalDeployments: '3,421',
      rating: 4.7,
      lastUpdated: '2024-01-12',
      createdAt: '2023-06-10',
      updatedAt: '2024-01-12',
    },
    icon: '‚ö°',
    tags: ['coding', 'full-stack', 'architecture', 'popular'],
  },
  {
    id: 'chatdev',
    name: 'ChatDev',
    category: 'enterprise',
    description: 'Virtual software company with AI agents in different roles collaborating on software development.',
    features: ['Multi-Role Agents', 'Collaborative Development', 'QA Testing', 'Project Management', 'Code Review'],
    capabilities: 'ChatDev simulates an entire software development team with CEO, CTO, programmer, designer, and tester roles. Each agent specializes in their domain for professional-quality output.',
    useCases: ['Enterprise Development', 'Team Collaboration', 'Quality Assurance', 'Large Projects', 'Professional Software'],
    version: '1.4.1',
    techStack: ['GPT-4', 'Multi-Agent Framework', 'Git Integration', 'Docker', 'Testing Suites'],
    repositoryUrl: 'https://github.com/OpenBMB/ChatDev',
    documentationUrl: 'https://github.com/OpenBMB/ChatDev/blob/main/README.md',
    isActive: true,
    isOpenSource: true,
    pricing: {
      model: 'free',
      cost: 'Free with API costs',
      features: ['Open Source', 'Multi-Agent', 'Enterprise Ready'],
    },
    performance: {
      successRate: '96%',
      averageSpeed: '25.7s',
      uptime: '99.6%',
      costPerTask: '$1.20',
    },
    metadata: {
      totalDeployments: '1,234',
      rating: 4.8,
      lastUpdated: '2024-01-08',
      createdAt: '2023-09-15',
      updatedAt: '2024-01-08',
    },
    icon: 'üë•',
    tags: ['enterprise', 'collaboration', 'multi-agent', 'professional'],
  },
  {
    id: 'swe-agent',
    name: 'SWE-Agent',
    category: 'coding',
    description: 'Software Engineering Agent that automatically identifies and fixes bugs in codebases.',
    features: ['Bug Detection', 'Automated Fixes', 'Code Analysis', 'GitHub Integration', 'Testing', 'Quality Assurance'],
    capabilities: 'SWE-Agent analyzes codebases, identifies issues, and implements fixes automatically. Integrates with GitHub for seamless workflow and maintains code quality standards.',
    useCases: ['Bug Fixing', 'Code Maintenance', 'Quality Control', 'GitHub Integration', 'Automated Testing'],
    version: '0.2.8',
    techStack: ['GPT-4', 'GitHub API', 'Static Analysis', 'Testing Frameworks', 'CI/CD'],
    repositoryUrl: 'https://github.com/princeton-nlp/SWE-agent',
    documentationUrl: 'https://swe-agent.com/',
    isActive: true,
    isOpenSource: true,
    pricing: {
      model: 'free',
      cost: 'Free with API costs',
      features: ['Open Source', 'GitHub Integration', 'Automated Testing'],
    },
    performance: {
      successRate: '89%',
      averageSpeed: '8.4s',
      uptime: '99.5%',
      costPerTask: '$0.25',
    },
    metadata: {
      totalDeployments: '5,678',
      rating: 4.6,
      lastUpdated: '2024-01-14',
      createdAt: '2024-04-15',
      updatedAt: '2024-01-14',
    },
    icon: 'üîß',
    tags: ['bug-fixing', 'github', 'testing', 'maintenance'],
  },
  {
    id: 'chemcrow',
    name: 'ChemCrow',
    category: 'research',
    description: 'Specialized chemistry agent with 13 expert tools for molecular analysis, synthesis planning, and chemical research.',
    features: ['Molecular Analysis', 'Synthesis Planning', 'Chemical Tools', 'Expert Knowledge', 'Safety Protocols'],
    capabilities: 'ChemCrow uses advanced chemical knowledge and specialized tools to assist with complex chemistry tasks, outperforming general AI in chemistry-specific applications.',
    useCases: ['Drug Discovery', 'Chemical Synthesis', 'Molecular Analysis', 'Academic Research', 'Safety Assessment'],
    version: '1.2.0',
    techStack: ['GPT-4', 'Chemical Tools', 'RDKit', 'Specialized APIs', 'Safety Databases'],
    repositoryUrl: 'https://github.com/ur-whitelab/chemcrow-public',
    documentationUrl: 'https://chemcrow.readthedocs.io/',
    isActive: true,
    isOpenSource: true,
    pricing: {
      model: 'free',
      cost: 'Free with API costs',
      features: ['Open Source', 'Specialized Tools', 'Expert Knowledge'],
    },
    performance: {
      successRate: '95%',
      averageSpeed: '3.2s',
      uptime: '99.7%',
      costPerTask: '$0.35',
    },
    metadata: {
      totalDeployments: '892',
      rating: 4.9,
      lastUpdated: '2024-01-09',
      createdAt: '2023-05-20',
      updatedAt: '2024-01-09',
    },
    icon: 'üß™',
    tags: ['chemistry', 'research', 'specialized', 'academic'],
  },
  // Additional agents can be added here following the same pattern
]

export const DEPLOYMENT_ENVIRONMENTS = [
  { value: 'development', label: 'Development' },
  { value: 'staging', label: 'Staging' },
  { value: 'production', label: 'Production' },
] as const

export const SORT_OPTIONS = [
  { value: 'name-asc', label: 'Name A-Z' },
  { value: 'name-desc', label: 'Name Z-A' },
  { value: 'popularity-desc', label: 'Most Popular' },
  { value: 'rating-desc', label: 'Highest Rated' },
  { value: 'created_at-desc', label: 'Newest First' },
  { value: 'created_at-asc', label: 'Oldest First' },
] as const

export const TERMINAL_COMMANDS = [
  {
    command: 'help',
    description: 'Show available commands',
    usage: 'help [command]',
    category: 'general',
  },
  {
    command: 'agents list',
    description: 'List all available agents',
    usage: 'agents list [--category=<category>]',
    category: 'agents',
  },
  {
    command: 'agents deploy',
    description: 'Deploy an agent',
    usage: 'agents deploy <agent-id> [--env=<environment>]',
    category: 'agents',
  },
  {
    command: 'system status',
    description: 'Show system health',
    usage: 'system status',
    category: 'system',
  },
] as const